{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Test service stack",
  "Parameters": {
    "VPCStackName": {
      "Description": "The name of the target VPC stack to deploy this ELB into",
      "Type": "String"
    },
    "ServiceName": {
      "Description": "The name of the ECS Service to create",
      "Type": "String"
    },
      "EnvBucket": {
        "Description": "Bucket For CloudFormation transform snippet",
        "Type": "String"
      },
      "ContainerCpu": {
        "Description": "How much CPU to give the container. 1024 is 1 CPU",
        "Type": "Number",
        "Default": 128
      },
      "ContainerMemory": {
        "Description": "How much memory in megabytes to give the container",
        "Type": "Number",
        "Default": 128
      },
    "EnvironmentType": {
      "Description": "Name of the environment to build : demo, development, staging performance or production",
      "Type": "String",
      "Default": "test"
    },
    "ImageUrl": {
      "Description": "The url of a docker image that contains the application process that will handle the traffic for this service",
      "Type": "String"
    },
    "ServiceRole": {
      "AllowedValues": [
        "true", "false"
      ],
      "Default": "false",
      "Type": "String",
      "Description": "Should we use a service role specific for this service"
    },
    "ServiceRoleName": {
      "Default": "",
      "Type": "String",
      "Description": "The Name given to the service role. Can be common accross services"
    }
  },
  "Conditions": {
    "UseServiceRole": {
        "Fn::Equals" : [ {"Ref" : "ServiceRole"}, "true" ]
    }
  },
  "Resources": {
    "ContainerTask": {
      "Type": "AWS::ECS::TaskDefinition",
      "Properties": {
        "Family" : {"Fn::Sub" : "${VPCStackName}-${EnvironmentType}-${ServiceName}"},
        "Cpu": { "Ref": "ContainerCpu" },
        "Memory": { "Ref": "ContainerMemory" },
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": [ "FARGATE" ],
        "ContainerDefinitions": [
          {
            "Name": {"Fn::Sub" : "${ServiceName}-${EnvironmentType}"},
            "Cpu": { "Ref": "ContainerCpu" },
            "Memory": { "Ref": "ContainerMemory" },
            "Image": { "Ref": "ImageUrl" },
            "Fn::Transform": {
               "Name": "AWS::Include",
               "Parameters": {
                 "Location": { "Ref": "EnvBucket" }
               }
            }
          }
        ]
      }
    }
  }
}
