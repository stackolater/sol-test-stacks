{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Underlay VPC & Public subnets [01-create-vpc]",
  "Parameters": {
    "VPCCIDRROOT": {
      "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){1}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$",
      "Default": "10.4",
      "Description": "CIDR block prefix for the VPC, should be first two '.' seperated values",
      "Type": "String"
    },
    "HasNatGateway": {
      "Default": "true",
      "Type": "String"
    },
    "HasNatInstance": {
      "Default": "true",
      "Type": "String"
    },
    "KeyPairName": {
      "Description": "Public/private key pairs allow you to securely connect to your NAT instance after it launches. This is used only if the region does not support NAT gateways.",
      "Type": "String",
      "Default": "sol"
    },
    "NATInstanceType": {
      "AllowedValues": [
        "t2.nano",
        "t2.micro",
        "t2.small",
        "t2.medium",
        "t2.large",
        "m3.medium",
        "m3.large",
        "m4.large"
      ],
      "Default": "t2.nano",
      "Description": "Amazon EC2 instance type for the NAT instances. This is used only if the region does not support NAT gateways.",
      "Type": "String"
    }
  },
  "Mappings": {
    "AWSAMIRegionMap": {
      "AMI": {
        "AWSNATHVM": "amzn-ami-vpc-nat-hvm-2016.03.3.x86_64-ebs"
      },
      "ap-northeast-1": {
        "AWSNATHVM": "ami-2443b745"
      },
      "ap-northeast-2": {
        "AWSNATHVM": "ami-d14388bf"
      },
      "ap-south-1": {
        "AWSNATHVM": "ami-e2b9d38d"
      },
      "ap-southeast-1": {
        "AWSNATHVM": "ami-a79b49c4"
      },
      "ap-southeast-2": {
        "AWSNATHVM": "ami-53371f30"
      },
      "eu-central-1": {
        "AWSNATHVM": "ami-5825cd37"
      },
      "eu-west-1": {
        "AWSNATHVM": "ami-a8dd45db"
      },
      "sa-east-1": {
        "AWSNATHVM": "ami-9336bcff"
      },
      "us-east-1": {
        "AWSNATHVM": "ami-4868ab25"
      },
      "us-west-1": {
        "AWSNATHVM": "ami-004b0f60"
      },
      "us-west-2": {
        "AWSNATHVM": "ami-a275b1c2"
      }
    }
  },
  "Conditions": {
    "CreateNatGateway": {
      "Fn::Equals": [
        {
          "Ref": "HasNatGateway"
        },
        "true"
      ]
    },
    "CreateNatInstance": {
      "Fn::Equals": [
        {
          "Ref": "HasNatInstance"
        },
        "true"
      ]
    }
  },
  "Resources": {
    "DHCPOptions": {
      "Type": "AWS::EC2::DHCPOptions",
      "Properties": {
        "DomainNameServers": ["AmazonProvidedDNS"]
      }
    },
    "VPC": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.4.0.0/16",
        "EnableDnsSupport": true,
        "EnableDnsHostnames": true,
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Ref": "AWS::StackName"
            }
          }
        ]
      }
    },
    "VPCDHCPOptionsAssociation": {
      "Type": "AWS::EC2::VPCDHCPOptionsAssociation",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "DhcpOptionsId": {
          "Ref": "DHCPOptions"
        }
      }
    },
    "InternetGateway": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Network",
            "Value": "Public"
          }
        ]
      }
    },
    "VPCGatewayAttachment": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "InternetGatewayId": {
          "Ref": "InternetGateway"
        }
      }
    },
    "PublicSubnet1": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "CidrBlock": "10.4.0.0/20",
        "AvailabilityZone": "eu-west-1a",
        "Tags": [
          {
            "Key": "Network",
            "Value": "Public"
          },
          {
            "Key": "Role",
            "Value": "Public"
          },
          {
            "Key": "Name",
            "Value": {
              "Fn::Sub": "${AWS::StackName}-public-1-new-join"
            }
          }
        ],
        "MapPublicIpOnLaunch": true
      }
    },
    "PublicSubnet2": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "CidrBlock": "10.4.16.0/20",
        "AvailabilityZone": "eu-west-1b",
        "Tags": [
          {
            "Key": "Network",
            "Value": "Public"
          },
          {
            "Key": "Role",
            "Value": "Public"
          },
          {
            "Key": "Name",
            "Value": {
              "Fn::Sub": "${AWS::StackName}-public-2-new-join"
            }
          }
        ],
        "MapPublicIpOnLaunch": true
      }
    },
    "PublicSubnetRouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "Tags": [
          {
            "Key": "Network",
            "Value": "Public"
          }
        ]
      }
    },
    "PublicSubnetRoute": {
      "DependsOn": "VPCGatewayAttachment",
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "PublicSubnetRouteTable"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "InternetGateway"
        }
      }
    },
    "PublicSubnet1RouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": {
          "Ref": "PublicSubnet1"
        },
        "RouteTableId": {
          "Ref": "PublicSubnetRouteTable"
        }
      }
    },
    "PublicSubnet2RouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": {
          "Ref": "PublicSubnet2"
        },
        "RouteTableId": {
          "Ref": "PublicSubnetRouteTable"
        }
      }
    },
    "NAT1EIP": {
      "Condition": "CreateNatGateway",
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc"
      }
    },
    "NATGateway1": {
      "Condition": "CreateNatGateway",
      "Type": "AWS::EC2::NatGateway",
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": ["NAT1EIP", "AllocationId"]
        },
        "SubnetId": {
          "Ref": "PublicSubnet1"
        }
      }
    },
    "NAT2EIP": {
      "Condition": "CreateNatGateway",
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc"
      }
    },
    "NATGateway2": {
      "Condition": "CreateNatGateway",
      "Type": "AWS::EC2::NatGateway",
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": ["NAT2EIP", "AllocationId"]
        },
        "SubnetId": {
          "Ref": "PublicSubnet2"
        }
      }
    },
    "NATInstance1": {
      "Condition": "CreateNatInstance",
      "DependsOn": "VPCGatewayAttachment",
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "ImageId": {
          "Fn::FindInMap": [
            "AWSAMIRegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AWSNATHVM"
          ]
        },
        "InstanceType": {
          "Ref": "NATInstanceType"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "NAT1"
          }
        ],
        "NetworkInterfaces": [
          {
            "GroupSet": [
              {
                "Ref": "NATInstanceSecurityGroup"
              }
            ],
            "AssociatePublicIpAddress": true,
            "DeviceIndex": "0",
            "DeleteOnTermination": true,
            "SubnetId": {
              "Ref": "PublicSubnet1"
            }
          }
        ],
        "KeyName": {
          "Fn::If": [
            "CreateNatInstance",
            {
              "Ref": "KeyPairName"
            },
            {
              "Ref": "AWS::NoValue"
            }
          ]
        },
        "SourceDestCheck": false
      }
    },
    "NATInstance2": {
      "Condition": "CreateNatInstance",
      "DependsOn": "VPCGatewayAttachment",
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "ImageId": {
          "Fn::FindInMap": [
            "AWSAMIRegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AWSNATHVM"
          ]
        },
        "InstanceType": {
          "Ref": "NATInstanceType"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "NAT2"
          }
        ],
        "NetworkInterfaces": [
          {
            "GroupSet": [
              {
                "Ref": "NATInstanceSecurityGroup"
              }
            ],
            "AssociatePublicIpAddress": true,
            "DeviceIndex": "0",
            "DeleteOnTermination": true,
            "SubnetId": {
              "Ref": "PublicSubnet2"
            }
          }
        ],
        "KeyName": {
          "Fn::If": [
            "CreateNatInstance",
            {
              "Ref": "KeyPairName"
            },
            {
              "Ref": "AWS::NoValue"
            }
          ]
        },
        "SourceDestCheck": false
      }
    },
    "NATInstanceSecurityGroup": {
      "Condition": "CreateNatInstance",
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Enables outbound internet access for the VPC via the NAT instances",
        "VpcId": {
          "Ref": "VPC"
        },
        "SecurityGroupIngress": [
          {
            "IpProtocol": "-1",
            "FromPort": 1,
            "ToPort": 65535,
            "CidrIp": {
              "Fn::Sub": "${VPCCIDRROOT}.0.0/16"
            }
          }
        ]
      }
    },
    "CloudfrontHttp": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "cloudfront-http-ip-ranges",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "FromPort": -1,
            "IpProtocol": "-1",
            "ToPort": -1
          }
        ],
        "VpcId": {
          "Ref": "VPC"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "cloudfront"
          },
          {
            "Key": "Protocol",
            "Value": "http"
          },
          {
            "Key": "AutoUpdate",
            "Value": "true"
          }
        ]
      }
    },
    "CloudfrontHttps": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "cloudfront-https-ip-ranges",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "FromPort": -1,
            "IpProtocol": "-1",
            "ToPort": -1
          }
        ],
        "VpcId": {
          "Ref": "VPC"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "cloudfront"
          },
          {
            "Key": "Protocol",
            "Value": "https"
          },
          {
            "Key": "AutoUpdate",
            "Value": "true"
          }
        ]
      }
    }
  },
  "Outputs": {
    "PublicSubnet1ID": {
      "Description": "Public subnet 1 ID in Availability Zone 1",
      "Value": {
        "Ref": "PublicSubnet1"
      },
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-PublicSubnet1ID"
        }
      }
    },
    "PublicSubnet2ID": {
      "Description": "Public subnet 2 ID in Availability Zone 2",
      "Value": {
        "Ref": "PublicSubnet2"
      },
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-PublicSubnet2ID"
        }
      }
    },
    "VPCID": {
      "Value": {
        "Ref": "VPC"
      },
      "Description": "VPC ID",
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-VPCID"
        }
      }
    },
    "VPCCidr": {
      "Value": {
        "Fn::GetAtt": ["VPC", "CidrBlock"]
      },
      "Description": "VPC Cidr block",
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-VPCCidr"
        }
      }
    },
    "VpcCidrRoot": {
      "Value": {
        "Ref": "VPCCIDRROOT"
      },
      "Description": "VPC CIDR Root",
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-VPCCIDRROOT"
        }
      }
    },
    "AvailabilityZones": {
      "Value": {
        "Fn::Sub": "${PublicSubnet1.AvailabilityZone},${PublicSubnet2.AvailabilityZone}"
      },
      "Description": "VPC Subnet AvailabilityZones (comma separated list)",
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-AvailabilityZones"
        }
      }
    },
    "NatGatewayZone1": {
      "Condition": "CreateNatGateway",
      "Value": {
        "Ref": "NATGateway1"
      },
      "Description": "Nat Gateway in Zone 1",
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-NatGatewayZone1"
        }
      }
    },
    "NatGatewayZone2": {
      "Condition": "CreateNatGateway",
      "Value": {
        "Ref": "NATGateway2"
      },
      "Description": "Nat Gateway in Zone 2",
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-NatGatewayZone2"
        }
      }
    },
    "NatInstanceZone1": {
      "Condition": "CreateNatInstance",
      "Value": {
        "Ref": "NATInstance1"
      },
      "Description": "Nat Gateway in Zone 1",
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-NatInstanceZone1"
        }
      }
    },
    "NatInstanceZone2": {
      "Condition": "CreateNatInstance",
      "Value": {
        "Ref": "NATInstance2"
      },
      "Description": "Nat Gateway in Zone 2",
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-NatInstanceZone2"
        }
      }
    },
    "CloudfrontHttpSG": {
      "Value": {
        "Ref": "CloudfrontHttp"
      },
      "Description": "Cloudfront http Security Group",
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-CloudfrontHttpSG"
        }
      }
    },
    "CloudfrontHttpsSG": {
      "Value": {
        "Ref": "CloudfrontHttps"
      },
      "Description": "Cloudfront https Security Group",
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-CloudfrontHttpsSG"
        }
      }
    }
  }
}
